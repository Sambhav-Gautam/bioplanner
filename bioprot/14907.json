{
  "id": "14907",
  "protocols.io url": "https://www.protocols.io/view/14907",
  "title": "Fish genome assembly and annotation pipeline",
  "original description": "From this protocol, we can know detail methods of assembly and annotation of the L. maculatus genome.",
  "steps": "\nQuality control\n1. Get raw sequencing data in Fastq format. Filter the input raw sequences by using SOAPnuke (v.1.5.6).\nNOTES using parameters \" -l 5 -q 0.5 -n 0.1 -Q 2 --seqType 0\"\n\nk-mer analysis\n2. Estimate the genome size (650 Mb) with k-mer analysis.\u00a0\nNOTES k=17; about 27.7Gb reads from as input; the genome size with the formula: G\u2009=\u2009N*(L\u2009\u2212\u200917\u2009+\u20091)/K_depth, where N and L are the total number of reads and the length of reads, respectively, and K_depth indicates the frequency of k-mers occurring more frequently than the others.\n\nAssembly\n3. 1)\u00a0Run SOAPdenovo2(v. 2.04.4) to assemble our genome.\n2)\u00a0Perform krskgf (v. 1.19) and Gapcloser (v. 1.10) to further close gaps in our genome obtained in step3.\nNOTES 1) performing \"pregraph ( -K 57 -p 10)->contig (-g)->map (-p 10 -k 39)->scaff(-p 10)\" modes in turn;  2) using reads from all insert-size libraries.\n\nRepeat annotation_de novo\n4. 1)\u00a0Run RepeatModeler to build de novo library based on the input assembled genome sequence.\n2)\u00a0Basing on the library constructed in step 5 as database, run RepeatMasker (v. 3.3.0) to find and then classify the repetitive sequences.\nNOTES 2) using parameters \"-nolow -no_is -norna -parallel 1\"\n\nRepeat annotation_database\n5. Run TRF (v. 4.09), RepeatMasker and RepeatProteinMask (v. 3.3.0) to identify repeats in the genome at DNA and protein level, respectively, by aligning sequences against Repbase library (v. 17.01).\nNOTES using parameters \"-noLowSimple -pvalue 0.0001\" when running RepeatProteinMask\n\nGene prediction_preparation\n6. Mask these repetitive regions obtained above (step 5-7)\u00a0 with 'N's.\nNOTES Before gene prediction, mask the TEs in genome.\n\nGene prediction_de novo\n7. Run Augustus (v. 2.5.5) and Genscan (v. 2.1) to de novo predict genes in the repeat-masked genome sequences.\nNOTES using parameters \"--species=Lateolabrax_maculatus --uniqueGeneId=true --noInFrameStop=true --gff3=on --strand=both\" when running Augustus; using default parameters when runing Genescan.\n\nGene prediction_homolog\n8. Download protein sequences of teleost species (Danio rerio (NCBI, GenBank ID:50), D. labrax (NCBI, GenBank ID:2659), Gasterosteus aculeatus (NCBI, GenBank ID:146), Lates calcarifer (NCBI, GenBank ID:14180), Oreochromis niloticus (NCBI, GenBank ID:197), Oryzias latipes (NCBI, GenBank ID:542), Tetraodon nigroviridis (NCBI, GenBank ID:191) and Takifugu rubripes (NCBI, GenBank ID:63)), then align these against our masked genome sequences with BLAT, and then based on the BLAT mapping results, run GeneWise (v. 2.2.0 ) to predict genes.\nNOTES with parameters \"--max divergence rate 0.3 --extend length for both sides of regions 2000\"\n\nGene prediction_transcriptome\n9. Download transcriptome data of the spotted sea bass from NCBI. The data was assembled by Trinity (v.2013.11). Mapp this sequence to our genome with BLAT and then based on the BLAT results, reduced redundancy genes.\nNOTES default parameters\n\nGene prediction_GLEAN\n10. Integrate genes predicted in step 9-11 to obtain the consensus gene set by using GLEAN.\nNOTES filtering with criterion \"overlap cutoff 0.8 and at least one homolog support\"\n\nFinal gene set\n11. Added the genes which were supported by the transcriptome data and D. labrax\u2019s based prediction after manual evolution to the GLEAN gene set.\n\nFunctional annotation\n12. Map protein sequences of the final gene set to existing databases to identify their functions or motifs, such as SwissProt, TrEMBL, KEGG, InterPro.\nNOTES SwissProt, TrEMBL and KEGG: using BLASTP; Interpro: using InterProScan (version 4.7) with seven different models (Profilescan, blastprodom, HmmSmart, HmmPanther, HmmPfam, FPrintScan and Pattern-Scan)\n",
  "total protocol length in tokens": 1092,
  "original description length in tokens": 22,
  "number of steps": 12,
  "ai_generated_description": "This molecular biology protocol provides detailed steps for assembling and annotating the L. maculatus genome, from initial quality control to functional annotation. This extensive pipeline involves estimating the genome size with k-mer analysis, identifying repeats, predicting genes using both de novo and homolog methods, integrating the predicted genes to obtain a consensus gene set, and finally mapping these to existing databases to identify their functions or motifs.",
  "ai_generated_description length in tokens": 81,
  "generated_pseudocode": "def quality_control(raw_data, software, parameters):\n    pass\n\ndef k_mer_analysis(input_reads, k):\n    pass\n\ndef run_assembly(software, modes, insert_size_libraries):\n    pass\n\ndef gap_closing(software, genome):\n    pass\n\ndef build_de_novo_library(software, genome_sequence):\n    pass\n\ndef de_novo_repeat_annotation(software, database, parameters):\n    pass\n\ndef repeat_annotation_database(software, parameters, library):\n    pass\n\ndef genome_masking(repetitive_regions):\n    pass\n\ndef de_novo_gene_prediction(software, parameters):\n    pass\n\ndef download_protein_sequences(species):\n    pass\n\ndef homolog_gene_prediction(protein_sequences, software, parameters):\n    pass\n\ndef download_transcriptome_data(source):\n    pass\n\ndef transcriptome_gene_prediction(transcriptome_data, software):\n    pass\n\ndef integrate_genes(overlap_cutoff, homolog_support):\n    pass\n\ndef add_genes(gene_set, added_genes):\n    pass\n\ndef map_protein_sequences(protein_sequences, databases, software):\n    pass\n\n# Protocol steps\nquality_control(raw_data=\"Fastq\", software=\"SOAPnuke v.1.5.6\", parameters=\" -l 5 -q 0.5 -n 0.1 -Q 2 --seqType 0\")\nk_mer_analysis(input_reads=\"27.7Gb\", k=17)\nrun_assembly(software=\"SOAPdenovo2(v. 2.04.4)\", modes=[\"pregraph\", \"contig\", \"map\", \"scaff\"], insert_size_libraries=\"all\")\ngap_closing(software=[\"krskgf v. 1.19\", \"Gapcloser v. 1.10\"], genome=\"assembled in step 3\")\nbuild_de_novo_library(software=\"RepeatModeler\", genome_sequence=\"Assembled in step 3\")\nde_novo_repeat_annotation(software=\"RepeatMasker v. 3.3.0\", database=\"Constructed in step 5\", parameters=\"-nolow -no_is -norna -parallel 1\")\nrepeat_annotation_database(software=[\"TRF v. 4.09\", \"RepeatMasker\", \"RepeatProteinMask v. 3.3.0\"], parameters=\"-noLowSimple -pvalue 0.0001\", library=\"Repbase library v. 17.01\")\ngenome_masking(repetitive_regions=\"obtained in steps 5-7\")\nde_novo_gene_prediction(software=[\"Augustus v. 2.5.5\", \"Genscan v. 2.1\"], parameters=\"--species=Lateolabrax_maculatus --uniqueGeneId=true --noInFrameStop=true --gff3=on --strand=both\")\ndownload_protein_sequences(species=[\"Danio rerio (NCBI, GenBank ID:50)\", \"D. labrax (NCBI, GenBank ID:2659)\", \"Gasterosteus aculeatus (NCBI, GenBank ID:146)\", \"Lates calcarifer (NCBI, GenBank ID:14180)\", \"Oreochromis niloticus (NCBI, GenBank ID:197)\", \"Oryzias latipes (NCBI, GenBank ID:542)\", \"Tetraodon nigroviridis (NCBI, GenBank ID:191)\", \"Takifugu rubripes (NCBI, GenBank ID:63)\"])\nhomolog_gene_prediction(protein_sequences=\"downloaded from step 9\", software=[\"BLAT\", \"GeneWise v. 2.2.0\"], parameters=\"--max divergence rate 0.3 --extend length for both sides of regions 2000\")\ndownload_transcriptome_data(source=\"NCBI\")\ntranscriptome_gene_prediction(transcriptome_data=\"downloaded from step 11\", software=\"Trinity v.2013.11\")\nintegrate_genes(overlap_cutoff=0.8, homolog_support=\"at least one\")\nadd_genes(gene_set=\"result from step 12\", added_genes=\"Supported by transcriptome data and D. labrax based prediction\")\nmap_protein_sequences(protein_sequences=\"Final gene set\", databases=[\"SwissProt\", \"TrEMBL\", \"KEGG\", \"InterPro\"], software=[\"BLASTP\", \"InterProScan version 4.7\"])\n# end of protocol",
  "edited_pseudocode": null
}
